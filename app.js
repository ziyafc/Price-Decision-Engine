const express = require('express');
const path = require('path');

// Ana router (Ã¶rneÄŸin index.js; basit iÃ§erik oluÅŸturabilirsiniz)
const indexRouter = require('./routes/index');

// Engine fonksiyon test endpoint'leri
const engineTestRouter = require('./routes/engineTest');

// Supabase health test endpoint'i
const supabaseHealthRouter = require('./routes/supabaseHealth');

const app = express();

// Railway ortamÄ±nda PORT environment deÄŸiÅŸkeni atanÄ±r (Ã¶rneÄŸin 8080), yoksa 8080 kullanÄ±lÄ±r.
const PORT = process.env.PORT || 8080;

// Statik dosyalar
app.use(express.static(path.join(__dirname, 'public')));

// Engine endpoint'leri: /engine altÄ±nda Ã§alÄ±ÅŸÄ±r
app.use('/engine', engineTestRouter);

// Ana route (Ã¶rneÄŸin ana sayfa)
app.use('/', indexRouter);

// Supabase health endpoint'i: /health altÄ±nda eriÅŸilebilir
app.use('/health', supabaseHealthRouter);

// 404 fallback: EÅŸleÅŸmeyen routeâ€™lar iÃ§in views/404.html gÃ¶sterilir
app.use((req, res, next) => {
  res.status(404).sendFile(path.join(__dirname, 'views', '404.html'));
});

// "0.0.0.0" kullanarak tÃ¼m IP'lere dinleme aÃ§Ä±yoruz (Railway iÃ§in gereklidir)
app.listen(PORT, "0.0.0.0", () => {
  console.log(`ðŸš€ Server running at http://localhost:${PORT}/`);
});
