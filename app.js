const express = require('express');
const path = require('path');

// Ana router (√∂rneƒüin index.js)
const indexRouter = require('./routes/index');

// Engine fonksiyon test endpoint'leri
const engineTestRouter = require('./routes/engineTest');

// Supabase health test endpoint'i
const supabaseHealthRouter = require('./routes/supabaseHealth');

// Burada, "cronRunner" fonksiyonunun doƒüru yolu:
// Eƒüer senin "apps/price-engine-js/cronRunner.js" i√ßindeyse, ≈ü√∂yle:
const { cronRunner } = require('./apps/price-engine-js/cronRunner');
// Eƒüer farklƒ± klas√∂rdeyse, ona g√∂re g√ºncelle (√∂rn. './cronRunner')

const app = express();

// Railway ortamƒ±nda PORT environment deƒüi≈ükeni atanƒ±r, yoksa 8080 kullanƒ±lƒ±r.
const PORT = process.env.PORT || 8080;

// Statik dosyalar (public klas√∂r√º varsa)
app.use(express.static(path.join(__dirname, 'public')));

// Engine endpoint'leri: /engine altƒ±nda √ßalƒ±≈üƒ±r
app.use('/engine', engineTestRouter);

// Ana route
app.use('/', indexRouter);

// Supabase health endpoint'i: /health
app.use('/health', supabaseHealthRouter);

// 404 fallback
app.use((req, res, next) => {
  res.status(404).sendFile(path.join(__dirname, 'views', '404.html'));
});

// Sunucuyu "0.0.0.0" √ºzerinde ba≈ülat (Railway i√ßin)
app.listen(PORT, '0.0.0.0', () => {
  console.log(`üöÄ Server running at http://localhost:${PORT}/`);

  // Her 5 dakikada bir cronRunner fonksiyonunu √ßaƒüƒ±rƒ±yoruz.
  const FIVE_MINUTES = 5 * 60 * 1000;
  setInterval(() => {
    console.log('‚è±  Triggering PriceEngine cron internally...');
    cronRunner();
  }, FIVE_MINUTES);
});
